
91.Is callback asynchronous by nature?if not how to make it asynchronous?
92.What is Promise chaining?
93.What is benefit of promise chaining? or How it is the solution for callback hell?
94.what is Promsie.all ? Implement Promsie.all?

ans : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all

95.what is Promise Race?
ans : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all
96.What is callback?
97.GTO-(Javascript by Interview.js\Video1\v1.js)
function getAge() {
  "use strict";
   age = 21;
  console.log(age);
}

getAge();
98.GTO-(Javascript by Interview.js\Video1\v2.js)
const obj = {
    a : "one",
    b : "two",
    a : "three"
}

console.log(obj)
99.GTO-(Javascript by Interview.js\Video1\v3.js)
const a  = {}
const b = {key : 'b'}
const c  = {key : 'c'}

a[b] = 123
a[c] = 456
console.log(a[b])
100.GTO-(v4.js)
function sayHi(){
    return (()=>0)()
}

console.log(typeof sayHi() )
101.GTO-(v5)
const value = {number : 10}

const multiply = (x = {...value}) =>{
     console.log((x.number *= 2))
}

multiply()
multiply()
multiply(value)
multiply(value)
102.GTO-(v6)
const person  = {name : 'kiran'}

Object.seal(person)

person.age = 23;
delete person.name;
person.name = "HHHHHH"

console.log(person)
103.GTO-(v7)
const person = {
    name : "SUbhra",
    hobbies : ['coding'],
}

function addHobby(hobby, hobbies = person.hobbies){
    hobbies.push(hobby);
    console.log(hobbies)
    return hobbies;
}

addHobby('running',[]);
addHobby('dancing');
addHobby('baking',person.hobbies);

console.log(person.hobbies);
104.GTO-(v8)
const myLife = [" a", "b", "c", "d"];

for (let item in myLife) {
  console.log(item);
}
for (let item of myLife) {
  console.log(item);
}
//(Javascript by Interview.js\Video1\Video2)
105.GTO-(p1-p11)
console.log(!!null);
console.log(!!'');
console.log(!!1);
console.log(!'Subhra')
console.log(0)
console.log(new Number(0))
console.log(+true)
console.log(+false)
106.GTO-(p2)
console.log(+true)
console.log(+false)
console.log(eval('10*10+5'))
console.log(3+4+'5')
console.log(parseInt('7*6',10))
console.log(parseInt('7F6',16))
console.log(Number(2) === Number(2))
console.log(Boolean(true) === Boolean(true))
console.log(Symbol("ABC") === Symbol("ABC"))
console.log(`Hello\nWorld`)
console.log(String.raw`Hello\nWorld`)
console.log('I want ICecream'[0])
console.log('I want ICecream'.charAt(0))
console.log(false || {} || null)
console.log(false || null || '');
console.log([] || 0 || false)
console.log("" && 0)
(()=>{
    let x,y;
    try{
        throw new Error();
    } catch (x){
        (x =1),(y = 2);
        console.log(x)
    }
    console.log(x)
    console.log(y)
})()
(Javascript by Interview.js\Video1\Video3)
107.GTO-(x1)
let person = { name : "Kiran"}

const members  = [person]

person = null;

console.log(members);
108.GTO-(x2)
let person = {name : "Kiran"}

function helloBudyy(occupation){
 return `${this.name} is working as ${occupation}`
}

console.log(helloBudyy.call(person,'engineer'))
console.log(helloBudyy.bind(person,'engineer'))
109.GTO-(x3)
function check(data){
    if(data === {occ : 'engineer'}){
        console.log('You are an engineer ')
    }
    else if(data == {occ : 'engineer'}){
         console.log("You are still an enginner")
    }
    else{
        console.log("You dont work")
    }
}

(check({occ : 'engineer'}))
110.(x5)
function getPersonInfo(one,two,three){
    console.log(one,two,three)
}

const person  = "Kiran"
const occ = 'Engineer'

getPersonInfo`${person} is working as ${occ}`;
//(Javascript by Interview.js\Video1\Video4)
111.(L1)
let random = { person : 'ABC' }
random = 23;

if(!typeof random === 'string'){
    console.log('Its a string...')
}else{
    console.log('itsnot String...')
}
112.(L2)
const user  = {
    email : 'myemail@',
    updateEmail:(email) =>{
        this.email = email;
    }
}

user.updateEmail('newemal@.com')
console.log(user.email)
//(Javascript by Interview.js\Video1\Most Asked)
113.GTO-(PB1)
function foo(){
    return {
        bar : 'hello'
    }
}

function foo2(){
    return 
    {
        bar : 'hello'
    }
}

console.log(foo())
console.log(foo2())
114.GTO-(pb2)
console.log(0.1 + 0.2 === 0.3)
115.Write a function to check palindrom or not(pb3)
116.(pb4)
console.log(sum(2, 3));
console.log(sum(2)(3));

write a common for both 
117.(pb5)
console.log(1 + "2" + "2")
console.log( 1 +  +"2" + "2")
console.log(1 + -"1" + "2")// -"1" = -1
console.log(+"1" + "1" + "2")
console.log("A" - "B" + "2") //NAN2 for alphabets
console.log( 'A' - "B" + 2) //NAN

118.(Javascript by Interview.js\Video1\Most asked qns)
var a1 = "jonh".split("");

var a2 = a1.reverse();

var a3 = "jones".split("");

a2.push(a3);

console.log(a1.length);
console.log(a1.slice(-1))
console.log(a2.length)
console.log(a2.slice(-1))

119.(k2)
console.log("0 || 1 = " + (0 || 1)); 
console.log("1 || 2 = "+(1 || 2));  

120.(k2)
console.log("0 && 1 =" +(0 && 1)); 
console.log("1 && 2="+(1 && 2)); 
